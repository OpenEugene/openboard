// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

// openboard
//
// user semantics:
//
//  Add{T}(s)    (Add{T}(s)Req)    returns {T}(s)Resp // POST
//  Ovr{T}(s)    (Ovr{T}(s)Req)    returns {T}(s)Resp // PUT
//  Mod{T}(s)    (Mod{T}(s)Req)    returns {T}(s)Resp // PATCH
//  Get{T}       (Get{T}Req)       returns {T}Resp    // GET
//  Fnd{T}s      (Fnd{T}sReq)      returns {T}sResp   // GET
//  Rmv{T}(s)    (Rmv{T}(s)Req)    returns EmptyResp  // DELETE
//  Unr{T}       (Unr{T}Req)       returns {T}Resp    // PATCH

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoleResp struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleResp) Reset()         { *m = RoleResp{} }
func (m *RoleResp) String() string { return proto.CompactTextString(m) }
func (*RoleResp) ProtoMessage()    {}
func (*RoleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *RoleResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleResp.Unmarshal(m, b)
}
func (m *RoleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleResp.Marshal(b, m, deterministic)
}
func (m *RoleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleResp.Merge(m, src)
}
func (m *RoleResp) XXX_Size() int {
	return xxx_messageInfo_RoleResp.Size(m)
}
func (m *RoleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleResp.DiscardUnknown(m)
}

var xxx_messageInfo_RoleResp proto.InternalMessageInfo

func (m *RoleResp) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoleResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddRoleReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRoleReq) Reset()         { *m = AddRoleReq{} }
func (m *AddRoleReq) String() string { return proto.CompactTextString(m) }
func (*AddRoleReq) ProtoMessage()    {}
func (*AddRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *AddRoleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRoleReq.Unmarshal(m, b)
}
func (m *AddRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRoleReq.Marshal(b, m, deterministic)
}
func (m *AddRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRoleReq.Merge(m, src)
}
func (m *AddRoleReq) XXX_Size() int {
	return xxx_messageInfo_AddRoleReq.Size(m)
}
func (m *AddRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddRoleReq proto.InternalMessageInfo

func (m *AddRoleReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RolesResp struct {
	Items                []*RoleResp `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total                uint32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RolesResp) Reset()         { *m = RolesResp{} }
func (m *RolesResp) String() string { return proto.CompactTextString(m) }
func (*RolesResp) ProtoMessage()    {}
func (*RolesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *RolesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RolesResp.Unmarshal(m, b)
}
func (m *RolesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RolesResp.Marshal(b, m, deterministic)
}
func (m *RolesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RolesResp.Merge(m, src)
}
func (m *RolesResp) XXX_Size() int {
	return xxx_messageInfo_RolesResp.Size(m)
}
func (m *RolesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RolesResp.DiscardUnknown(m)
}

var xxx_messageInfo_RolesResp proto.InternalMessageInfo

func (m *RolesResp) GetItems() []*RoleResp {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RolesResp) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type FndRolesReq struct {
	RoleIds              []uint32 `protobuf:"varint,1,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
	RoleNames            []string `protobuf:"bytes,2,rep,name=roleNames,proto3" json:"roleNames,omitempty"`
	Limit                uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Lapse                uint32   `protobuf:"varint,4,opt,name=lapse,proto3" json:"lapse,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FndRolesReq) Reset()         { *m = FndRolesReq{} }
func (m *FndRolesReq) String() string { return proto.CompactTextString(m) }
func (*FndRolesReq) ProtoMessage()    {}
func (*FndRolesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *FndRolesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FndRolesReq.Unmarshal(m, b)
}
func (m *FndRolesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FndRolesReq.Marshal(b, m, deterministic)
}
func (m *FndRolesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FndRolesReq.Merge(m, src)
}
func (m *FndRolesReq) XXX_Size() int {
	return xxx_messageInfo_FndRolesReq.Size(m)
}
func (m *FndRolesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FndRolesReq.DiscardUnknown(m)
}

var xxx_messageInfo_FndRolesReq proto.InternalMessageInfo

func (m *FndRolesReq) GetRoleIds() []uint32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

func (m *FndRolesReq) GetRoleNames() []string {
	if m != nil {
		return m.RoleNames
	}
	return nil
}

func (m *FndRolesReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FndRolesReq) GetLapse() uint32 {
	if m != nil {
		return m.Lapse
	}
	return 0
}

type User struct {
	Id                   uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	EmailHold            bool                 `protobuf:"varint,4,opt,name=emailHold,proto3" json:"emailHold,omitempty"`
	Altmail              string               `protobuf:"bytes,5,opt,name=altmail,proto3" json:"altmail,omitempty"`
	AltmailHold          bool                 `protobuf:"varint,6,opt,name=altmailHold,proto3" json:"altmailHold,omitempty"`
	FullName             string               `protobuf:"bytes,7,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Avatar               string               `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Roles                []*RoleResp          `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`
	LastLogin            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Deleted              *timestamp.Timestamp `protobuf:"bytes,13,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Blocked              *timestamp.Timestamp `protobuf:"bytes,14,opt,name=blocked,proto3" json:"blocked,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetEmailHold() bool {
	if m != nil {
		return m.EmailHold
	}
	return false
}

func (m *User) GetAltmail() string {
	if m != nil {
		return m.Altmail
	}
	return ""
}

func (m *User) GetAltmailHold() bool {
	if m != nil {
		return m.AltmailHold
	}
	return false
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetRoles() []*RoleResp {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetLastLogin() *timestamp.Timestamp {
	if m != nil {
		return m.LastLogin
	}
	return nil
}

func (m *User) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *User) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *User) GetDeleted() *timestamp.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *User) GetBlocked() *timestamp.Timestamp {
	if m != nil {
		return m.Blocked
	}
	return nil
}

type UserResp struct {
	Item                 *User    `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResp) Reset()         { *m = UserResp{} }
func (m *UserResp) String() string { return proto.CompactTextString(m) }
func (*UserResp) ProtoMessage()    {}
func (*UserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *UserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResp.Unmarshal(m, b)
}
func (m *UserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResp.Marshal(b, m, deterministic)
}
func (m *UserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResp.Merge(m, src)
}
func (m *UserResp) XXX_Size() int {
	return xxx_messageInfo_UserResp.Size(m)
}
func (m *UserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserResp proto.InternalMessageInfo

func (m *UserResp) GetItem() *User {
	if m != nil {
		return m.Item
	}
	return nil
}

type AddUserReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmailHold            bool     `protobuf:"varint,3,opt,name=emailHold,proto3" json:"emailHold,omitempty"`
	Altmail              string   `protobuf:"bytes,4,opt,name=altmail,proto3" json:"altmail,omitempty"`
	AltmailHold          bool     `protobuf:"varint,5,opt,name=altmailHold,proto3" json:"altmailHold,omitempty"`
	FullName             string   `protobuf:"bytes,6,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Avatar               string   `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Password             string   `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	RoleIds              []uint32 `protobuf:"varint,9,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserReq) Reset()         { *m = AddUserReq{} }
func (m *AddUserReq) String() string { return proto.CompactTextString(m) }
func (*AddUserReq) ProtoMessage()    {}
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *AddUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserReq.Unmarshal(m, b)
}
func (m *AddUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserReq.Marshal(b, m, deterministic)
}
func (m *AddUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserReq.Merge(m, src)
}
func (m *AddUserReq) XXX_Size() int {
	return xxx_messageInfo_AddUserReq.Size(m)
}
func (m *AddUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserReq proto.InternalMessageInfo

func (m *AddUserReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddUserReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddUserReq) GetEmailHold() bool {
	if m != nil {
		return m.EmailHold
	}
	return false
}

func (m *AddUserReq) GetAltmail() string {
	if m != nil {
		return m.Altmail
	}
	return ""
}

func (m *AddUserReq) GetAltmailHold() bool {
	if m != nil {
		return m.AltmailHold
	}
	return false
}

func (m *AddUserReq) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *AddUserReq) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *AddUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddUserReq) GetRoleIds() []uint32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

type OvrUserReq struct {
	Id                   uint32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Req                  *AddUserReq `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OvrUserReq) Reset()         { *m = OvrUserReq{} }
func (m *OvrUserReq) String() string { return proto.CompactTextString(m) }
func (*OvrUserReq) ProtoMessage()    {}
func (*OvrUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *OvrUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OvrUserReq.Unmarshal(m, b)
}
func (m *OvrUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OvrUserReq.Marshal(b, m, deterministic)
}
func (m *OvrUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OvrUserReq.Merge(m, src)
}
func (m *OvrUserReq) XXX_Size() int {
	return xxx_messageInfo_OvrUserReq.Size(m)
}
func (m *OvrUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OvrUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_OvrUserReq proto.InternalMessageInfo

func (m *OvrUserReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OvrUserReq) GetReq() *AddUserReq {
	if m != nil {
		return m.Req
	}
	return nil
}

type UsersResp struct {
	Items                []*User  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total                uint32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsersResp) Reset()         { *m = UsersResp{} }
func (m *UsersResp) String() string { return proto.CompactTextString(m) }
func (*UsersResp) ProtoMessage()    {}
func (*UsersResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{8}
}

func (m *UsersResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersResp.Unmarshal(m, b)
}
func (m *UsersResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersResp.Marshal(b, m, deterministic)
}
func (m *UsersResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersResp.Merge(m, src)
}
func (m *UsersResp) XXX_Size() int {
	return xxx_messageInfo_UsersResp.Size(m)
}
func (m *UsersResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersResp.DiscardUnknown(m)
}

var xxx_messageInfo_UsersResp proto.InternalMessageInfo

func (m *UsersResp) GetItems() []*User {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *UsersResp) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type FndUsersReq struct {
	RoleIds              []uint32             `protobuf:"varint,1,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
	Emails               []string             `protobuf:"bytes,2,rep,name=emails,proto3" json:"emails,omitempty"`
	EmailHold            bool                 `protobuf:"varint,3,opt,name=emailHold,proto3" json:"emailHold,omitempty"`
	Altmails             []string             `protobuf:"bytes,4,rep,name=altmails,proto3" json:"altmails,omitempty"`
	AltmailHold          bool                 `protobuf:"varint,5,opt,name=altmailHold,proto3" json:"altmailHold,omitempty"`
	CreatedFirst         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=createdFirst,proto3" json:"createdFirst,omitempty"`
	CreatedFinal         *timestamp.Timestamp `protobuf:"bytes,7,opt,name=createdFinal,proto3" json:"createdFinal,omitempty"`
	CreatedDesc          bool                 `protobuf:"varint,8,opt,name=createdDesc,proto3" json:"createdDesc,omitempty"`
	Limit                uint32               `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Lapse                uint32               `protobuf:"varint,10,opt,name=lapse,proto3" json:"lapse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FndUsersReq) Reset()         { *m = FndUsersReq{} }
func (m *FndUsersReq) String() string { return proto.CompactTextString(m) }
func (*FndUsersReq) ProtoMessage()    {}
func (*FndUsersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{9}
}

func (m *FndUsersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FndUsersReq.Unmarshal(m, b)
}
func (m *FndUsersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FndUsersReq.Marshal(b, m, deterministic)
}
func (m *FndUsersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FndUsersReq.Merge(m, src)
}
func (m *FndUsersReq) XXX_Size() int {
	return xxx_messageInfo_FndUsersReq.Size(m)
}
func (m *FndUsersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FndUsersReq.DiscardUnknown(m)
}

var xxx_messageInfo_FndUsersReq proto.InternalMessageInfo

func (m *FndUsersReq) GetRoleIds() []uint32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

func (m *FndUsersReq) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *FndUsersReq) GetEmailHold() bool {
	if m != nil {
		return m.EmailHold
	}
	return false
}

func (m *FndUsersReq) GetAltmails() []string {
	if m != nil {
		return m.Altmails
	}
	return nil
}

func (m *FndUsersReq) GetAltmailHold() bool {
	if m != nil {
		return m.AltmailHold
	}
	return false
}

func (m *FndUsersReq) GetCreatedFirst() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedFirst
	}
	return nil
}

func (m *FndUsersReq) GetCreatedFinal() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedFinal
	}
	return nil
}

func (m *FndUsersReq) GetCreatedDesc() bool {
	if m != nil {
		return m.CreatedDesc
	}
	return false
}

func (m *FndUsersReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FndUsersReq) GetLapse() uint32 {
	if m != nil {
		return m.Lapse
	}
	return 0
}

type RmvUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RmvUserResp) Reset()         { *m = RmvUserResp{} }
func (m *RmvUserResp) String() string { return proto.CompactTextString(m) }
func (*RmvUserResp) ProtoMessage()    {}
func (*RmvUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{10}
}

func (m *RmvUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RmvUserResp.Unmarshal(m, b)
}
func (m *RmvUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RmvUserResp.Marshal(b, m, deterministic)
}
func (m *RmvUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RmvUserResp.Merge(m, src)
}
func (m *RmvUserResp) XXX_Size() int {
	return xxx_messageInfo_RmvUserResp.Size(m)
}
func (m *RmvUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RmvUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_RmvUserResp proto.InternalMessageInfo

type RmvUserReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RmvUserReq) Reset()         { *m = RmvUserReq{} }
func (m *RmvUserReq) String() string { return proto.CompactTextString(m) }
func (*RmvUserReq) ProtoMessage()    {}
func (*RmvUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11}
}

func (m *RmvUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RmvUserReq.Unmarshal(m, b)
}
func (m *RmvUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RmvUserReq.Marshal(b, m, deterministic)
}
func (m *RmvUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RmvUserReq.Merge(m, src)
}
func (m *RmvUserReq) XXX_Size() int {
	return xxx_messageInfo_RmvUserReq.Size(m)
}
func (m *RmvUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RmvUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_RmvUserReq proto.InternalMessageInfo

func (m *RmvUserReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*RoleResp)(nil), "pb.RoleResp")
	proto.RegisterType((*AddRoleReq)(nil), "pb.AddRoleReq")
	proto.RegisterType((*RolesResp)(nil), "pb.RolesResp")
	proto.RegisterType((*FndRolesReq)(nil), "pb.FndRolesReq")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*UserResp)(nil), "pb.UserResp")
	proto.RegisterType((*AddUserReq)(nil), "pb.AddUserReq")
	proto.RegisterType((*OvrUserReq)(nil), "pb.OvrUserReq")
	proto.RegisterType((*UsersResp)(nil), "pb.UsersResp")
	proto.RegisterType((*FndUsersReq)(nil), "pb.FndUsersReq")
	proto.RegisterType((*RmvUserResp)(nil), "pb.RmvUserResp")
	proto.RegisterType((*RmvUserReq)(nil), "pb.RmvUserReq")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 786 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xcd, 0x8a, 0xdb, 0x48,
	0x10, 0x5e, 0xc9, 0x3f, 0x92, 0x4a, 0xb6, 0x67, 0x69, 0x76, 0x07, 0x21, 0xcc, 0xae, 0xd0, 0xc9,
	0x3b, 0x07, 0x1b, 0xbc, 0x39, 0x24, 0x73, 0x30, 0x0c, 0x24, 0x43, 0x02, 0x21, 0x01, 0x25, 0x79,
	0x80, 0xb6, 0xd5, 0x33, 0x88, 0xe8, 0xcf, 0x6a, 0xd9, 0x39, 0x84, 0x5c, 0xe6, 0x9c, 0x5b, 0x1e,
	0x2d, 0xaf, 0x10, 0x08, 0x79, 0x8b, 0xd0, 0xd5, 0xad, 0xbf, 0xf9, 0xb1, 0xe7, 0xa6, 0xaf, 0xab,
	0xbe, 0xaa, 0x52, 0xd5, 0xd7, 0xd5, 0x00, 0x3b, 0xce, 0x8a, 0x79, 0x5e, 0x64, 0x65, 0x46, 0xf4,
	0x7c, 0xed, 0x4e, 0xaf, 0xb3, 0xec, 0x3a, 0x66, 0x0b, 0x9a, 0x47, 0x0b, 0x9a, 0xa6, 0x59, 0x49,
	0xcb, 0x28, 0x4b, 0xb9, 0xf4, 0x70, 0xff, 0x55, 0x56, 0x44, 0xeb, 0xdd, 0xd5, 0xa2, 0x8c, 0x12,
	0xc6, 0x4b, 0x9a, 0xe4, 0xd2, 0xc1, 0x9f, 0x83, 0x19, 0x64, 0x31, 0x0b, 0x18, 0xcf, 0xc9, 0x04,
	0xf4, 0x28, 0x74, 0x34, 0x4f, 0x9b, 0x8d, 0x03, 0x3d, 0x0a, 0x09, 0x81, 0x7e, 0x4a, 0x13, 0xe6,
	0xe8, 0x9e, 0x36, 0xb3, 0x02, 0xfc, 0xf6, 0x3d, 0x80, 0x8b, 0x30, 0x94, 0x94, 0x6d, 0xed, 0xa1,
	0xb5, 0x3c, 0x5e, 0x80, 0x25, 0xcc, 0x1c, 0x43, 0xfa, 0x30, 0x88, 0x4a, 0x96, 0x70, 0x47, 0xf3,
	0x7a, 0x33, 0x7b, 0x39, 0x9a, 0xe7, 0xeb, 0x79, 0x95, 0x2f, 0x90, 0x26, 0xf2, 0x17, 0x0c, 0xca,
	0xac, 0xa4, 0x31, 0xe6, 0x19, 0x07, 0x12, 0xf8, 0x5b, 0xb0, 0x2f, 0xd3, 0x50, 0x45, 0xda, 0x12,
	0x07, 0x8c, 0x22, 0x8b, 0xd9, 0xab, 0x50, 0x86, 0x1a, 0x07, 0x15, 0x24, 0x53, 0xb0, 0xc4, 0xe7,
	0x1b, 0x9a, 0x30, 0xee, 0xe8, 0x5e, 0x6f, 0x66, 0x05, 0xcd, 0x81, 0x08, 0x1e, 0x47, 0x49, 0x54,
	0x3a, 0x3d, 0x19, 0x1c, 0x01, 0x9e, 0xd2, 0x9c, 0x33, 0xa7, 0xaf, 0x4e, 0x05, 0xf0, 0xbf, 0xf6,
	0xa1, 0xff, 0x81, 0xb3, 0xe2, 0x4e, 0x23, 0x5c, 0x30, 0x45, 0xd7, 0x5b, 0xcd, 0xa8, 0xb1, 0x08,
	0xc5, 0x12, 0x1a, 0xc5, 0x98, 0xc0, 0x0a, 0x24, 0x10, 0x45, 0xe1, 0xc7, 0xcb, 0x2c, 0x0e, 0x31,
	0x89, 0x19, 0x34, 0x07, 0xe2, 0x67, 0x68, 0x5c, 0x22, 0x6b, 0x80, 0xac, 0x0a, 0x12, 0x0f, 0x6c,
	0xf5, 0x89, 0xcc, 0x21, 0x32, 0xdb, 0x47, 0xa2, 0x96, 0xab, 0x5d, 0x1c, 0x8b, 0xbf, 0x73, 0x0c,
	0x59, 0x4b, 0x85, 0xc9, 0x29, 0x0c, 0xe9, 0x9e, 0x96, 0xb4, 0x70, 0x4c, 0xb4, 0x28, 0x24, 0xa6,
	0x20, 0x3a, 0xc2, 0x1d, 0xeb, 0xbe, 0x29, 0xa0, 0x89, 0x3c, 0x05, 0x2b, 0xa6, 0xbc, 0x7c, 0x9d,
	0x5d, 0x47, 0xa9, 0x03, 0x9e, 0x36, 0xb3, 0x97, 0xee, 0x5c, 0xaa, 0x67, 0x5e, 0xa9, 0x67, 0xfe,
	0xbe, 0x52, 0x4f, 0xd0, 0x38, 0x93, 0x27, 0x60, 0x6c, 0x0a, 0x46, 0x4b, 0x16, 0x3a, 0xf6, 0x51,
	0x5e, 0xe5, 0x2a, 0x58, 0xbb, 0x3c, 0x44, 0xd6, 0xe8, 0x38, 0x4b, 0xb9, 0x0a, 0x56, 0xc8, 0x62,
	0x26, 0x58, 0xe3, 0xe3, 0x2c, 0xe5, 0x2a, 0x58, 0xeb, 0x38, 0xdb, 0x7c, 0x64, 0xa1, 0x33, 0x39,
	0xce, 0x52, 0xae, 0xfe, 0x0c, 0x4c, 0xa1, 0x06, 0xd4, 0xf1, 0x14, 0xfa, 0x42, 0xac, 0xa8, 0x09,
	0x7b, 0x69, 0x8a, 0x06, 0xa2, 0x0d, 0x4f, 0xfd, 0x1b, 0x1d, 0x6f, 0x85, 0xf4, 0xde, 0x76, 0xe4,
	0xa2, 0x3d, 0x24, 0x17, 0xfd, 0x41, 0xb9, 0xf4, 0x0e, 0xc8, 0xa5, 0x7f, 0x50, 0x2e, 0x83, 0xc3,
	0x72, 0x19, 0x3e, 0x28, 0x17, 0xa3, 0x23, 0x17, 0x17, 0xcc, 0x9c, 0x72, 0xfe, 0x29, 0x2b, 0x42,
	0x25, 0xa4, 0x1a, 0xb7, 0xef, 0xa1, 0xd5, 0xb9, 0x87, 0xfe, 0x0a, 0xe0, 0xed, 0xbe, 0xa8, 0x7a,
	0x70, 0xfb, 0x0a, 0x79, 0xd0, 0x2b, 0xd8, 0x16, 0xff, 0xda, 0x5e, 0x4e, 0x44, 0xff, 0x9a, 0x86,
	0x05, 0xc2, 0xe4, 0x5f, 0x80, 0x25, 0xb0, 0xdc, 0x1b, 0xff, 0x74, 0xf7, 0x46, 0xd3, 0xf0, 0x83,
	0x3b, 0xe3, 0x97, 0x8e, 0x4b, 0x43, 0x85, 0x39, 0xb4, 0x34, 0x4e, 0x61, 0x88, 0xfd, 0xad, 0x36,
	0x86, 0x42, 0x47, 0x06, 0xe1, 0x82, 0xa9, 0x7a, 0xcb, 0x9d, 0x3e, 0xf2, 0x6a, 0xfc, 0x88, 0x51,
	0xac, 0x60, 0xa4, 0xc4, 0x7f, 0x19, 0x15, 0xbc, 0xc4, 0x71, 0x1c, 0x96, 0x62, 0xc7, 0xbf, 0xc3,
	0x4f, 0x69, 0x8c, 0x43, 0x7b, 0x2c, 0x3f, 0xa5, 0x28, 0x16, 0x85, 0x9f, 0x33, 0xbe, 0xc1, 0xc9,
	0x9a, 0x41, 0xfb, 0xa8, 0x59, 0x96, 0xd6, 0xbd, 0xcb, 0x12, 0xda, 0xcb, 0x72, 0x0c, 0x76, 0x90,
	0xec, 0xab, 0x0b, 0xe2, 0x4f, 0x01, 0x6a, 0x78, 0x67, 0xfa, 0xcb, 0x9f, 0x3a, 0x18, 0xc2, 0xf6,
	0x6e, 0xbf, 0x21, 0xff, 0x81, 0xa1, 0x5e, 0x10, 0x52, 0xe9, 0x40, 0x3d, 0x27, 0x6e, 0x67, 0x31,
	0xf9, 0x7f, 0x90, 0x73, 0x30, 0xab, 0x37, 0x80, 0x9c, 0x08, 0x5b, 0xeb, 0x45, 0x70, 0xc7, 0x95,
	0x33, 0x2a, 0xc6, 0x9f, 0xdc, 0x7c, 0xff, 0xf1, 0x4d, 0x37, 0xc9, 0x70, 0x21, 0xf7, 0xd9, 0x33,
	0x4c, 0x23, 0xd7, 0x79, 0x57, 0x6e, 0x32, 0x4d, 0x5d, 0xf9, 0x9f, 0x48, 0x04, 0x7f, 0xb0, 0x10,
	0x97, 0xf4, 0x5c, 0x3b, 0x23, 0x2b, 0x30, 0x94, 0x92, 0x25, 0xb5, 0x91, 0xf5, 0x2d, 0xea, 0xdf,
	0x48, 0x3d, 0x71, 0x01, 0xa9, 0x8b, 0xcf, 0x51, 0xf8, 0x45, 0xf0, 0x65, 0xd9, 0xa8, 0xc2, 0xba,
	0xec, 0x4a, 0x93, 0xb2, 0xec, 0x5a, 0xe8, 0xad, 0xb2, 0x77, 0xe8, 0xbf, 0x02, 0x43, 0xf5, 0x51,
	0xe6, 0x6e, 0x9a, 0xea, 0x9e, 0x74, 0x30, 0xcf, 0x7d, 0x82, 0xdc, 0xd1, 0x59, 0x2b, 0xfd, 0x7a,
	0x88, 0x32, 0xf8, 0xff, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x93, 0x16, 0x52, 0x27, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserSvcClient is the client API for UserSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserSvcClient interface {
	AddRole(ctx context.Context, in *AddRoleReq, opts ...grpc.CallOption) (*RoleResp, error)
	FndRoles(ctx context.Context, in *FndRolesReq, opts ...grpc.CallOption) (*RolesResp, error)
	AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*UserResp, error)
	OvrUser(ctx context.Context, in *OvrUserReq, opts ...grpc.CallOption) (*UserResp, error)
	FndUsers(ctx context.Context, in *FndUsersReq, opts ...grpc.CallOption) (*UsersResp, error)
	RmvUser(ctx context.Context, in *RmvUserReq, opts ...grpc.CallOption) (*RmvUserResp, error)
}

type userSvcClient struct {
	cc *grpc.ClientConn
}

func NewUserSvcClient(cc *grpc.ClientConn) UserSvcClient {
	return &userSvcClient{cc}
}

func (c *userSvcClient) AddRole(ctx context.Context, in *AddRoleReq, opts ...grpc.CallOption) (*RoleResp, error) {
	out := new(RoleResp)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/AddRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) FndRoles(ctx context.Context, in *FndRolesReq, opts ...grpc.CallOption) (*RolesResp, error) {
	out := new(RolesResp)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/FndRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*UserResp, error) {
	out := new(UserResp)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) OvrUser(ctx context.Context, in *OvrUserReq, opts ...grpc.CallOption) (*UserResp, error) {
	out := new(UserResp)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/OvrUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) FndUsers(ctx context.Context, in *FndUsersReq, opts ...grpc.CallOption) (*UsersResp, error) {
	out := new(UsersResp)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/FndUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) RmvUser(ctx context.Context, in *RmvUserReq, opts ...grpc.CallOption) (*RmvUserResp, error) {
	out := new(RmvUserResp)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/RmvUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserSvcServer is the server API for UserSvc service.
type UserSvcServer interface {
	AddRole(context.Context, *AddRoleReq) (*RoleResp, error)
	FndRoles(context.Context, *FndRolesReq) (*RolesResp, error)
	AddUser(context.Context, *AddUserReq) (*UserResp, error)
	OvrUser(context.Context, *OvrUserReq) (*UserResp, error)
	FndUsers(context.Context, *FndUsersReq) (*UsersResp, error)
	RmvUser(context.Context, *RmvUserReq) (*RmvUserResp, error)
}

func RegisterUserSvcServer(s *grpc.Server, srv UserSvcServer) {
	s.RegisterService(&_UserSvc_serviceDesc, srv)
}

func _UserSvc_AddRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).AddRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/AddRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).AddRole(ctx, req.(*AddRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_FndRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FndRolesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).FndRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/FndRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).FndRoles(ctx, req.(*FndRolesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).AddUser(ctx, req.(*AddUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_OvrUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OvrUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).OvrUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/OvrUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).OvrUser(ctx, req.(*OvrUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_FndUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FndUsersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).FndUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/FndUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).FndUsers(ctx, req.(*FndUsersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_RmvUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RmvUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).RmvUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/RmvUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).RmvUser(ctx, req.(*RmvUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserSvc",
	HandlerType: (*UserSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRole",
			Handler:    _UserSvc_AddRole_Handler,
		},
		{
			MethodName: "FndRoles",
			Handler:    _UserSvc_FndRoles_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _UserSvc_AddUser_Handler,
		},
		{
			MethodName: "OvrUser",
			Handler:    _UserSvc_OvrUser_Handler,
		},
		{
			MethodName: "FndUsers",
			Handler:    _UserSvc_FndUsers_Handler,
		},
		{
			MethodName: "RmvUser",
			Handler:    _UserSvc_RmvUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
