name: Manage WIP workflow
on:
  push:
    branches:
      - '**-[0-9]+'
jobs:
  build:
    name: WIP it
    runs-on: ubuntu-latest
    steps:
      - name: Set branch name envvar
        run: |
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set branch issue envvar
        run: |
          issue="${BRANCH_NAME##*-}"
          ! [[ "${issue}" =~ ^[0-9]+$ ]] && >&2 echo "issue num not parsed" && exit 1
          echo "BRANCH_ISSUE=${issue}" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          fetch-depth: 128
          ref: main

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Setup/update WIP pull requests and related issues
        run: |
          set -e

          echo "branch issue: ${BRANCH_ISSUE}" # debug

          infoFile="commits_info"
          git log \
            --left-right \
            --graph \
            --cherry-pick \
            --oneline \
            --pretty=format:%s \
            origin/main..origin/"${BRANCH_NAME}" >> "${infoFile}"
          echo >> "${infoFile}" # add missing newline

          tac "${infoFile}" > "rev_${infoFile}" && mv "rev_${infoFile}" "${infoFile}" # reverse data
          cat "${infoFile}" # debug

          wipLineNum="$(cat "${infoFile}" | grep "^> WIP" -n | tail -n 1 | cut -d: -f1)"
          nowipLineNum="$(cat "${infoFile}" | grep "^> NOWIP" -n | tail -n 1 | cut -d: -f1)"
          prList="$(hub pr list --head "${BRANCH_NAME}" --state=open --format="%i %t\n")"
          prCt="$(echo -ne "${prList}" | wc -l)"

          echo "wip:${wipLineNum} nowip:${nowipLineNum}" # debug
          echo pr list...                                # debug
          echo -ne "${prList}"                           # debug

          echo "${prCt} existing pr(s) for the branch issue number ${BRANCH_ISSUE}" # debug

          case "${prCt}" in
          0)
            prTitle="$(hub issue show --format="%t" "${BRANCH_ISSUE}")"
            if [[ -n "${wipLineNum}" && "${nowipLineNum}" -lt "${wipLineNum}" ]]; then
              prTitle="WIP: ${prTitle}"
            fi

            echo "pr title: ${prTitle}" # debug

            hub pull-request \
              --assign "${GITHUB_ACTOR}" \
              --base main \
              --head ${BRANCH_NAME} \
              --message "${prTitle}" \
              --message "Closes #${BRANCH_ISSUE}"

            echo "github actor: ${GITHUB_ACTOR}" # debug

            hub issue update "${BRANCH_ISSUE}" \
              -a "${GITHUB_ACTOR}"
            ;;

          1)
            prTitle="$(echo -ne "${prList}" | cut -d" " -f2-)"
            prIssue="$(echo -ne "${prList}" | grep -o "#[0-9]*" | tr -d "#")"
            shouldChange=false

            if [[ -n "${nowipLineNum}" && "${nowipLineNum}" -gt "${wipLineNum}" ]]; then
              if [[ "${prTitle}" =~ ^WIP: ]]; then
                shouldChange=true
                prTitle="${prTitle#WIP:}"
                prTitle="${prTitle# }"
              fi
            elif [[ -n "${wipLineNum}" && "${nowipLineNum}" -lt "${wipLineNum}" ]]; then
              prTitle="$(echo -ne "${prList}" | cut -d" " -f2-)"
              if [[ ! "${prTitle}" =~ ^WIP: ]]; then
                shouldChange=true
                prTitle="WIP: ${prTitle}"
              fi
            fi

            if ${shouldChange}; then
              echo "shouldChange: ${shouldChange}" # debug

              prBody="$(hub pr list --head "${BRANCH_NAME}" --state=open --format="%b")"

              echo "pr title: ${prTitle}" # debug
              echo "pr body: ${prBody}"   # debug

              hub issue update "${prIssue}" \
                --message "${prTitle}" \
                --message "${prBody}"
            fi
            ;;

          *)
            echo "multiple PRs were found based on the same branch"
            echo "taking no action"
            ;;
          esac
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
